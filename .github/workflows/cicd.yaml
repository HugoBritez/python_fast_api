name: CI

on:
  push:
    branches:
      - master

jobs:
  ci:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      
      - name: Install dependencies
        run: |
          pip3 install -r requirements.txt
      
      - name: Run unittests
        run: |
          pytest test/test.py 
      
      - name: Get branch name
        id: branch-name
        uses: tj-actions/branch-names@v6

      - name: Determine Docker image tag
        id: image
        run: |
          IMAGE_TAG="${{ steps.branch-name.outputs.current_branch }}_${{ github.sha }}"
          echo "tag=$IMAGE_TAG" >> $GITHUB_OUTPUT

      - name: docker build 
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/python-fast-api:${{ github.sha }} .

      - name: docker login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: docker push 
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/python-fast-api:${{ steps.image.outputs.tag }}
      
    outputs:
        image_tag: ${{ steps.image.outputs.tag }}

  cd:
    runs-on: ubuntu-latest
    needs: ci
    steps:    
      
      - name: Check out code
        uses: actions/checkout@v2
     
      - name: Authenticate in AWS
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.AWS_IAM_ROLE }}
          role-duration-seconds: 1200
          role-session-name: GHA-${{ github.sha }}
          aws-region: ${{ secrets.AWS_REGION }}
      
      - name: Upgrade Helm Chart with latest image tag
        run: |
          aws eks update-kubeconfig --name $CLUSTER_NAME
          
          helm upgrade \
            python-fastapi chart/ \
            --install --wait \
            --values eks-values.yaml \
            --set image.tag=${{ needs.ci.outputs.image_tag }} \
            --namespace $NAMESPACE
        env:
          CLUSTER_NAME: ${{ secrets.CLUSTER_NAME }}
          NAMESPACE: ${{ secrets.NAMESPACE }}

      - name: Notify Successful
        run: |
          echo "Success!"
      
      - name: Notify Fail
        if: ${{ failure() }}
        run: |
          echo "The deployment has failed!"